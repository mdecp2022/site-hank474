var tipuesearch = {"pages": [{'title': 'About', 'text': '41123147蔡承翰 \n 此網站使用 \xa0stud.cycu.org編寫 \n githib倉儲: mdecp2022/site-hank474: site-hank474 created by GitHub Classroom \n cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n', 'tags': '', 'url': 'About.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'W5', 'text': '', 'tags': '', 'url': 'W5.html'}, {'title': '密碼亂數', 'text': '點這裡執行 w5 passwod generator \n # 導入亂數模組\nimport random\n# 導入字串模組\nimport string\n# 利用 def 關鍵字定義函式\n# 函式的輸入變數可以設定初始值\ndef password_generator(size=4, chars=string.ascii_lowercase + string.digits):\n    # 函式內以多行註解說明函式功能\n    """Generate random password\n    """\n    # 利用 return 關鍵字將所產生的亂數字串傳回\n    return \'\'.join(random.choice(chars) for _ in range(size))\n# 建立一個變數與隨後的字串對應\npass_string = "abcdefghkmnpqrstuwxyz123456789"\ncp_num = ["0747", "0761"]\ncad_num = ["0773", "0786"]\ndef gen_acc_pass(course, course_num):\n    stud_list =[]\n    for num in course_num:\n        url = "https://nfu.cycu.org/?semester=1111&courseno=" + num + "&column=True"\n        class_list = open(url).read().split("\\n")[:-1]\n        stud_list += class_list\n        #print(stud_list)\n    for stud_num in stud_list:\n        password = password_generator(4, pass_string)\n        #print(password)\n        account = course + stud_num\n        #print(account)\n        print(stud_num + "\\t" + account + "\\t" + password)\ngen_acc_pass("cp", cp_num)\ngen_acc_pass("cad", cad_num) \n', 'tags': '', 'url': '密碼亂數.html'}, {'title': 'W6', 'text': '', 'tags': '', 'url': 'W6.html'}, {'title': '抽點', 'text': '點這裡執行 cp抽點 \n # Python 的註解分為單行註解與多行, 單行註解可在字串前方放入 #\n\'\'\'多行註解則可以透過三個單引號前後標註字串或文字段落內容, \n也可以使用三個雙引號作為多行註解的標註\n\'\'\'\n# 使用 import 導入 random 模組, 隨後就可以直接引用 random 模組的方法\nimport random\ncp1a = "0747"\n# 宣告 url 變數值為字串, 此字串為取得 cp2022 1a 選課成員名單\nurl = "https://nfu.cycu.org/?semester=1111&courseno=" + cp1a + "&column=True"\n# 利用上述已經宣告的 url 變數字串值, 作為 open() 函式的輸入變數, 可以連結至該網站\n# 連接 url 所代表字串的網站後, 再利用 read() 函式讀取該網站的內容, 即可取得 cp2022 1a 的選課成員學號\n# url 所屬的網站, 乃 69 中的一台虛擬主機 8/10ff-0-1-2, 並利用 Get 從教務主機取回課程註冊成員學號\n# 由於所取回的學號以跳行符號隔開, 因此取回的學號資料行, 再利用 split() 函式, 以 \\n 跳行符號分割後\n# 所對應到 data 的資料型別將會是數列\ndata = open(url).read().split("\\n")\n# 經過檢查 data 數列, 發現最後一個 element 為空字串, 因此利用 [:-1] 去掉數列的最後一個元素, -1 代表數列最後一個元素的索引\n#print(data[:-1])\n# 設定一個變數, 與修課成員學號數列對應\nstud = data[:-1]\n# 使用 random 模組中的 shuffle() 函式, 以隨機的方式排列 stud 數列內容\nrandom.shuffle(stud)\n# 設定 num 與 5 對應, 或將 5 整數值存入 num 變數所對應的記憶體位址\nnum = 5\n# 利用 for 重複迴圈與 range() 變數, 列印出 (利用 print() 函式) 已經隨機排列次序的 stud 數列的最前面 num 個學號值\nfor i in range(num):\n    print(stud[i]) \n 點這裡執行列出每 個人靜態網頁 \n brython_div1 <= html.BUTTON("hello")\nbrython_div1 <= html.BR()\nbrython_div1 <= html.A("google", href="https://google.com")\n"""\n\nurl = "https://mde.tw/studlist/2022fall/1a.txt"\ndata = open(url).read().split("\\n")\nmdecp2022 = "https://mdecp2022.github.io/site-"\ndata = data[1:-1]\nfor i in data:\n    stud = i.split("\\t")\n    stud_num = stud[0]\n    github_acc = stud[1]\n    #print(stud_num, github_acc)\n    if github_acc == "":\n        github_acc = stud_num\n    site = mdecp2022 + github_acc\n    link = html.A(stud_num, href=site)\n    brython_div1 <= link\n    brython_div1 <= html.BR()from browser import document, html\n\nbrython_div1 = document["brython_div2"]\n"""\n \n 點這裡執行 抽點程式與列出每個人靜態網頁程式結合 \n SRC1 \n # Python 的註解分為單行註解與多行, 單行註解可在字串前方放入 #\n\'\'\'多行註解則可以透過三個單引號前後標註字串或文字段落內容, \n也可以使用三個雙引號作為多行註解的標註\n\'\'\'\n# 使用 import 導入 random 模組, 隨後就可以直接引用 random 模組的方法\nimport random\ncp1a = "0747"\n# 宣告 url 變數值為字串, 此字串為取得 cp2022 1a 選課成員名單\nurl = "https://nfu.cycu.org/?semester=1111&courseno=" + cp1a + "&column=True"\n# 利用上述已經宣告的 url 變數字串值, 作為 open() 函式的輸入變數, 可以連結至該網站\n# 連接 url 所代表字串的網站後, 再利用 read() 函式讀取該網站的內容, 即可取得 cp2022 1a 的選課成員學號\n# url 所屬的網站, 乃 69 中的一台虛擬主機 8/10ff-0-1-2, 並利用 Get 從教務主機取回課程註冊成員學號\n# 由於所取回的學號以跳行符號隔開, 因此取回的學號資料行, 再利用 split() 函式, 以 \\n 跳行符號分割後\n# 所對應到 data 的資料型別將會是數列\ndata = open(url).read().split("\\n")\n# 經過檢查 data 數列, 發現最後一個 element 為空字串, 因此利用 [:-1] 去掉數列的最後一個元素, -1 代表數列最後一個元素的索引\n#print(data[:-1])\n# 設定一個變數, 與修課成員學號數列對應\nstud = data[:-1]\n# 使用 random 模組中的 shuffle() 函式, 以隨機的方式排列 stud 數列內容\nrandom.shuffle(stud)\n# 設定 num 與 5 對應, 或將 5 整數值存入 num 變數所對應的記憶體位址\nnum = 5\n# 利用 for 重複迴圈與 range() 變數, 列印出 (利用 print() 函式) 已經隨機排列次序的 stud 數列的最前面 num 個學號值\nfor i in range(num):\n    print(stud[i]) \n SRC2 \n brython_div1 <= html.BUTTON("hello")\nbrython_div1 <= html.BR()\nbrython_div1 <= html.A("google", href="https://google.com")\n"""\n\nurl = "https://mde.tw/studlist/2022fall/1a.txt"\ndata = open(url).read().split("\\n")\nmdecp2022 = "https://mdecp2022.github.io/site-"\ndata = data[1:-1]\nfor i in data:\n    stud = i.split("\\t")\n    stud_num = stud[0]\n    github_acc = stud[1]\n    #print(stud_num, github_acc)\n    if github_acc == "":\n        github_acc = stud_num\n    site = mdecp2022 + github_acc\n    link = html.A(stud_num, href=site)\n    brython_div1 <= link\n    brython_div1 <= html.BR()from browser import document, html\n\nbrython_div1 = document["brython_div2"]\n"""\n \n', 'tags': '', 'url': '抽點.html'}, {'title': '奇怪的3D方塊', 'text': '點這裡執行 w6 rotating block \n  納入 Brython 環境  \n \n \n  啟動 Brython  \n \n \n  給定 brython_div1 division 標註  \n \n  加入啟動按鈕後的 Rect 行走程式原始碼  \n \n # add <script type="text/javascript" src="https://unpkg.com/three@0.144.0/build/three.js"></script>\n# put pyweb3d.py to downloads/py\nfrom browser import window, load, document\nfrom pyweb3d import *\n\nbrython_div = document["brython_div1"]\nscene = Scene()\ncamera = PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 )\n\n# Renderer\nrenderer = WebGLRenderer()\nrenderer.setSize(800, 600)\nbrython_div <= renderer.domElement\n\ngeometry = BoxGeometry( 1, 2, 1 )\nmaterial = MeshBasicMaterial( { \'color\': 0xff0000 } )\ncube = Mesh( geometry, material )\nscene.add( cube )\n\ncamera.position.z = 5\n\ndef animate(time):\n    window.requestAnimationFrame( animate )\n\n    cube.rotation.x += 0.11\n    cube.rotation.y += 0.11\n\n    renderer.render( scene, camera )\n\nanimate(0) \n', 'tags': '', 'url': '奇怪的3D方塊.html'}, {'title': 'test', 'text': '點這裡執行 測試 \n', 'tags': '', 'url': 'test.html'}, {'title': 'W10', 'text': '', 'tags': '', 'url': 'W10.html'}, {'title': '作業程式', 'text': '點這裡執行 w10 hw1 \n import ast\n\n# get stud_list first\n\ndef get_stud(c_name):\n    courses = {"1a": "0747", "1b": "0761", "2a": "0773", "2b": "0786"}\n    #c_name = "1b"\n    c = courses[c_name]\n    url = "https://nfu.cycu.org/?semester=1111&courseno=" + c + "&column=True"\n    data = open(url).read().split("\\n")\n    stud = data[:-1]\n    return stud\n    \ncp_stud = get_stud("1b")\n\n# get w10 quiz result\ncp_w10_quiz_url = "https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a6825f13b1bb0b61e09e74dd117729eefe1d947f/20221110_cp1b_w10_quiz.json"\n\ndef get_score(url):\n    json_data = open(url).read()\n    big_dict = ast.literal_eval(json_data)\n    data = big_dict["body"]["testuser"]\n    quiz_dict = {}\n    for i in data:\n        stud_id = data[i]["user_name"]\n        stud_score = int(float(data[i]["total_score"]))\n        quiz_dict[stud_id] = stud_score\n    return quiz_dict\n    \ncp_quiz = get_score(cp_w10_quiz_url)\ncp_abs = []\nfor stud in cp_stud:\n    try:\n        print(stud, cp_quiz[stud])\n    except:\n        # 缺考者沒有 quiz 成績\n        print(stud, "缺")\n        cp_abs.append(stud)\n# 列出缺考名單\nprint("="*20)\nprint("以下為 w10 缺考名單:")\nfor stud in cp_abs:\n    print(stud)\n \n 點這裡執行 w10 hw2 \n A = [i for i in range(1,10,2)]\nprint(A) \n', 'tags': '', 'url': '作業程式.html'}, {'title': 'W11', 'text': '', 'tags': '', 'url': 'W11.html'}, {'title': '老師的繪畫方格', 'text': '點這裡執行 w11繪畫方格 \n from browser import document as doc\nfrom browser import html\ncanvas = html.CANVAS(width = 600, height = 600)\ncanvas.id = "canvas"\nbrython_div = doc["brython_div1"]\nbrython_div <= canvas\ncanvas = doc["canvas"]\nctx = canvas.getContext("2d")\ndef dRect(lux, luy, w, h, s=1, c=\'#ff0000\'):\n    ctx.lineWidth = s\n    ctx.strokeStyle = c\n    ctx.beginPath();\n    ctx.rect(lux, luy, w, h)\n    ctx.stroke();\ndef draw_line(x1, y1, x2, y2, color="#ff0000"):\n    ctx.beginPath()\n    ctx.moveTo(x1, y1)\n    ctx.lineTo(x2, y2)\n    ctx.strokeStyle = color\n    ctx.stroke()\ndef wText(x, y, t, s=14, c=\'#0000ff\'):\n    ctx.font = str(s) + "px Arial";\n    ctx.fillText(t, x, y)\ndef grid(startx, starty, w, h, wnum, hnum, pixel=1, color="#ff0000"):\n    for i in range(wnum+1):\n        for j in range(hnum+1):\n            yend = starty + h*(hnum)\n            xend = startx + w*(wnum)\n            x = startx + i*w\n            draw_line(x, starty, x, yend, color)\n            y = starty + j*h\n            draw_line(startx, y, xend, y, color)\n            #wText(w/2-10, y-w/2, str(j))\n            \nnum = 15\npixel = 1\nw = int(canvas.width/num) - pixel\nh = int(canvas.height/num) - pixel\nx = 1\ny = 1\ngrid(x, y, w, h, num, num, pixel=1, color="black") \n', 'tags': '', 'url': '老師的繪畫方格.html'}, {'title': 'W12', 'text': '', 'tags': '', 'url': 'W12.html'}, {'title': '參考', 'text': '點這裡執行: w11作業參考程式 \n import ast\n# get stud_list first\ndef get_stud(c_name):\n    courses = {"1a": "0747", "1b": "0761", "2a": "0773", "2b": "0786"}\n    #c_name = "1b"\n    c = courses[c_name]\n    url = "https://nfu.cycu.org/?semester=1111&courseno=" + c + "&column=True"\n    data = open(url).read().split("\\n")\n    stud = data[:-1]\n    return stud\n    \ncp_stud = get_stud("1b")\n# get w10 quiz result\ncp_w11_quiz_url = "https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/8e59f90d8ff4f1ad4fecd4f7ee159f91eb6addf9/cp1b_w11_quiz_result.json"\ncp_w10_quiz_url = "https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a6825f13b1bb0b61e09e74dd117729eefe1d947f/20221110_cp1b_w10_quiz.json"\ndef get_score(url):\n    num_stud = 0\n    total_score = 0\n    json_data = open(url).read()\n    big_dict = ast.literal_eval(json_data)\n    data = big_dict["body"]["testuser"]\n    quiz_dict = {}\n    for i in data:\n        stud_id = data[i]["user_name"]\n        stud_score = int(float(data[i]["total_score"]))\n        quiz_dict[stud_id] = stud_score\n        num_stud = num_stud + 1\n        total_score = total_score + stud_score\n    return quiz_dict, num_stud, total_score\n    \n#cp_quiz, num_stud, total_score = get_score(cp_w10_quiz_url)\ncp_quiz, num_stud, total_score = get_score(cp_w11_quiz_url)\ncp_abs = []\nfor stud in cp_stud:\n    try:\n        print(stud, cp_quiz[stud])\n    except:\n        # 缺考者沒有 quiz 成績\n        print(stud, "缺")\n        cp_abs.append(stud)\nprint("\\n考試平均分數為:", int(total_score/num_stud))\n# 列出缺考名單\nprint("="*20)\nprint("以下為 w10 缺考名單:")\nfor stud in cp_abs:\n    print(stud) \n', 'tags': '', 'url': '參考.html'}, {'title': 'W13', 'text': '', 'tags': '', 'url': 'W13.html'}, {'title': '溫度轉換', 'text': '點這裡執行: w13溫度轉換程式 ex1 \n \'\'\'\nf-c*9/5+32\nc=(f-32)*5/9\n\'\'\'\nc = input("請輸入攝氏溫度值")\nprint(type(c))\nc= float(c)\nprint(c, c*9/5 +32) \n \n 點這裡執行: w13溫度轉換程式 ex2 \n \'\'\'\nf-c*9/5+32\nc=(f-32)*5/9\n\'\'\'\nc = input("請輸入攝氏溫度值")\nprint(type(c))\nc= float(c)\nprint("你輸入的攝氏溫度:" + str(c),"等於華氏溫度:" + str(c*9/5 +32)) \n \n', 'tags': '', 'url': '溫度轉換.html'}, {'title': 'W14', 'text': '', 'tags': '', 'url': 'W14.html'}, {'title': '1a w14抽考成績與缺考人員名單', 'text': '點這裡執行 :1aw14抽考缺考人員名單 \n \n import ast\n\n\ndef get_stud(c_name):\n    courses = {"1a": "0747", "1b": "0761", "2a": "0773", "2b": "0786"}\n    c = courses[c_name]\n    url = "https://nfu.cycu.org/?semester=1111&courseno=" + c + "&column=True"\n    data = open(url).read().split("\\n")\n    stud = data[:-1]\n    return stud\n    \ncp_stud = get_stud("1a")\n\ncp_w14_quiz_url = "https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a48d36ae883bde8efd07b25bfddaed8f13200353/2022_1209_cp_w14_1a_quiz.json"\n\ndef get_score(url):\n    json_data = open(url).read()\n    big_dict = ast.literal_eval(json_data)\n    data = big_dict["body"]["testuser"]\n    quiz_dict = {}\n    for i in data:\n        stud_id = data[i]["user_name"]\n        stud_score = int(float(data[i]["total_score"]))\n        quiz_dict[stud_id] = stud_score\n    return quiz_dict\n    \ncp_quiz = get_score(cp_w14_quiz_url)\ncp_abs = []\nfor stud in cp_stud:\n    try:\n        print(stud, cp_quiz[stud])\n    except:\n        print(stud, "缺")\n        cp_abs.append(stud)\nprint("="*20)\nprint("以下為 w14 缺考名單:")\nfor stud in cp_abs:\n    print(stud) \n', 'tags': '', 'url': '1a w14抽考成績與缺考人員名單.html'}, {'title': 'w15', 'text': '1,為何學習計算機程式需要建立個人倉儲? \n A.能分散式的開發,免費, 一切公開, 每次push都能產生一個對應的版次，因此當出現大量麻煩的錯誤時或上級要求回歸前個設計時就能很方便的切換版 \n 2,全球資訊網能夠提供甚麼功能或有什麼優點? \n 與時俱進 \n 3,Replit, stud.cycu.org 與 localhost 分別代表甚麼? \n A.1.Replit: 能夠提供使用者雲端開發環境 \n \xa0 2.stud.cycu.org: 學校 Ubuntu司服器能直接acp推送改版 \n \xa0 3.localhost:主機近端以執行動態網站使用acp推送改版 \n 4,https, ssh 到底提供使用者那些功能或優點? \n https對於使用者來說比較方便,ssh需要在clone之前配置和添加ssh key \n 5,Brython 與 Python 有甚麼差別? \n 簡單來說，Brython就是一隻披著Python皮的JavaScript \n 6,能夠直接在瀏覽器中以 Brython 繪製中華民國國旗, 或模擬綠色方塊在方塊格點中任意移動, 代表甚麼? \n 代表對於掌控python有足夠理解? \n 7,變數, 字串, 整數, 浮點數, 數列, Tuple, Dictionary, 函式, 重複迴圈, class, 物件導向, 資料庫, 這些名詞對您而言代表甚麼? \n python程式中的幾個主指令是用來掌控關於下面子程序的 \n rect walk \n  納入 Brython 環境  \n \n \n  啟動 Brython  \n \n \n  給定 brython_div1 division 標註  \n \n  加入啟動按鈕後的 Rect 行走程式原始碼  \n \n \n', 'tags': '', 'url': 'w15.html'}, {'title': '考試成績', 'text': '', 'tags': '', 'url': '考試成績.html'}, {'title': '1a', 'text': '', 'tags': '', 'url': '1a.html'}, {'title': '第4週', 'text': '此程式是參考了老師的的(物件導向設計的學員名單與成績擷取)程式 \n 因此還無法列出缺考名單 \n 點這列出w4成績 \n', 'tags': '', 'url': '第4週.html'}, {'title': '第8週', 'text': '此程式是參考了老師的的(物件導向設計的學員名單與成績擷取) 程式 \n 因此還無法列出 缺考名單 \n 點這列出w8成績 \n', 'tags': '', 'url': '第8週.html'}, {'title': '第9週', 'text': '此程式是參考了老師的的( 物件導向設計的學員名單與成績擷取)程式 \n 因此還無法列出 缺考名單 \n 點這列出w9成績 \n', 'tags': '', 'url': '第9週.html'}, {'title': '第10週', 'text': '此程式是參考了老師的的( 物件導向設計的學員名單與成績擷取)程式 \n 因此還無法列出 缺考名單 \n 點這列出w10成績 \n', 'tags': '', 'url': '第10週.html'}, {'title': '第14週', 'text': '此程式是參考了老師的的( 物件導向設計的學員名單與成績擷取)程式 \n 因此還無法列出 缺考名單 \n 點這列出w14成績 \n', 'tags': '', 'url': '第14週.html'}, {'title': '1b', 'text': '', 'tags': '', 'url': '1b.html'}, {'title': 'w4', 'text': '此程式是參考了老師的的(物件導向設計的學員名單與成績擷取)程式 \n 因此還無法列出缺考名單 \n 點這裡列出w4考試成績 \n', 'tags': '', 'url': 'w4.html'}, {'title': 'w8', 'text': '此程式是參考了老師的的(物件導向設計的學員名單與成績擷取)程式 \n 因此還無法列出缺考名單 \n 點這裡列出w8考試成績 \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w9', 'text': '此程式是參考了老師的的(物件導向設計的學員名單與成績擷取)程式 \n 因此還無法列出缺考名單 \n 點這裡列出w9考試成績 \n', 'tags': '', 'url': 'w9.html'}, {'title': 'w10', 'text': '此程式是參考了老師的的(物件導向設計的學員名單與成績擷取)程式 \n 因此還無法列出缺考名單 \n 點這裡列出w10考試成績 \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w11', 'text': '此程式是參考了老師的的(物件導向設計的學員名單與成績擷取)程式 \n 因此還無法列出缺考名單 \n 點這裡列出w11考試成績 \n', 'tags': '', 'url': 'w11.html'}, {'title': 'w14', 'text': '此程式是參考了老師的的(物件導向設計的學員名單與成績擷取)程式 \n 因此還無法列出缺考名單 \n 點這裡列出w14考試成績 \n \n', 'tags': '', 'url': 'w14.html'}, {'title': '問題解決與心得', 'text': '在課程一開始始的時候,老師要求我們在Replit上連接github創建動態網站, \n \n 所以我在w5的時候用Replit創建了第一個動態網站,開始預習課堂上的作業:抽點程式,擷取個人靜態網站.但是到第7週時老師通知我們Replit將要停止服務 \n \n 所以要我們搬家到stud.cycu.org伺服器,然後在我成功git clone到stud.cycu.org創建了第二動態網站的時候卻不知道如何讓網頁中的python3 server.py一直開啟 \n \xa0 \xa0 \n \xa0 \xa0\xa0 \n 隨後在跟老師討論之下發現要在python3 server.py & 下完之後 exit才可以不停止先前動作 \n \xa0 \n 緊接著我又發現我無法提交改版至倉儲,在與老師的再次討論下發現在設定gitconfig[http][user]的時候不可以用windows文件打開設定一定要用內不只另設定不然無法推送改至github \n \n 再重設gitconfig之後再使用git pull拉下版本合併 \n \n 終於成功推送改版至github,但是之前在Replit做的時候創建了一個branch \n \n 導致之後的git pull 與commit出現錯誤 \n \n \n 然後再詢問老師如何處理之後 \n \n', 'tags': '', 'url': '問題解決與心得.html'}, {'title': 'cp2022H1', 'text': '這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束  \n \n  ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n \n', 'tags': '', 'url': 'cp2022H1.html'}, {'title': 'cp2022', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束  \n \n  ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n \n', 'tags': '', 'url': 'cp2022.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束  \n \n  ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n', 'tags': '', 'url': 'Brython.html'}]};